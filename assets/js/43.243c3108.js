(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{316:function(e,t,a){"use strict";a.r(t);var o=a(4),s=function(e){e.options.__data__block__={mermaid_64a5709c:"graph LR;\n\nsubgraph Praktiumsplaner\n\n    subgraph Dockercontext\n        Frontend\n        Backend\n        DBBackend[DB-Backend]\n        Keycloak\n        DB-Keycloak\n        Init-Keycloak\n    \n        Frontend --\x3e|fetch data| Backend\n        Backend --\x3e |check permission| Keycloak\n        Backend --\x3e|persisting| DBBackend\n        Frontend --\x3e|authenticate| Keycloak\n        Keycloak --\x3e|persisting| DB-Keycloak\n        Init-Keycloak --\x3e|configures| Keycloak\n    end\n    \n end\n \n Browser --\x3e|localhost:8080| Frontend\n",mermaid_64a56faa:"graph LR\n\nsubgraph Praktiumsplaner\n\n    subgraph IDE\n        IDEBackend[Backend]\n    end\n\n    subgraph Dockercontext\n        DBBackend[DB Backend]\n    end\n\n    IDEBackend --\x3e|localhost:5432| DBBackend\n    \n end\n"}},n=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"local-development"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#local-development"}},[e._v("#")]),e._v(" Local Development")]),e._v(" "),t("p",[e._v("This page should make it easier to start developing locally.")]),e._v(" "),t("h2",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("p",[e._v("The following programs / tools must be installed:")]),e._v(" "),t("ul",[t("li",[e._v("Docker (to use the provided images)")])]),e._v(" "),t("h2",{attrs:{id:"stack-folder"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stack-folder"}},[e._v("#")]),e._v(" Stack folder")]),e._v(" "),t("p",[e._v("The Repository contains a "),t("code",[e._v("stack")]),e._v(" folder.\nIn this stack folder you can find a docker compose file.\nThis docker compose file is configured to deploy all the necessary services\nfor the application.\nThere is also a folder with keycloak migrations and "),t("code",[e._v(".env")]),e._v(" files for the different services.")]),e._v(" "),t("h3",{attrs:{id:"docker-compose-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-file"}},[e._v("#")]),e._v(" Docker Compose File")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Service")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("pp-frontend")]),e._v(" "),t("td",[e._v("The frontend if deployed")])]),e._v(" "),t("tr",[t("td",[e._v("pp-backend")]),e._v(" "),t("td",[e._v("The backend if deployed")])]),e._v(" "),t("tr",[t("td",[e._v("postgres-backend")]),e._v(" "),t("td",[e._v("Postgres Database for the application")])]),e._v(" "),t("tr",[t("td",[e._v("keycloak")]),e._v(" "),t("td",[e._v("Local SSO service")])]),e._v(" "),t("tr",[t("td",[e._v("init-keycloak")]),e._v(" "),t("td",[e._v("Keycloak initializer to apply the keycloak migrations")])]),e._v(" "),t("tr",[t("td",[e._v("postgres-keycloak")]),e._v(" "),t("td",[e._v("Postgres Database for the keycloak service")])]),e._v(" "),t("tr",[t("td",[e._v("postgres-pg-admin")]),e._v(" "),t("td",[e._v("PgAdmin to access the database")])]),e._v(" "),t("tr",[t("td",[e._v("mail-maildev")]),e._v(" "),t("td",[e._v("Local Mail-Client")])]),e._v(" "),t("tr",[t("td",[e._v("mail-mailpit")]),e._v(" "),t("td",[e._v("Local SMTP-Server")])])])]),e._v(" "),t("p",[e._v("Use docker compose to start the infrastructure")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# Starts the infrastructure services like keycloak and db for backend\ndocker compose up -d\n\n# Starts all services\ndocker compose --profile full up -d\n\n# Includes the backend service on startup\ndocker compose --profile backend up -d\n\n# Includes the frontend service on startup\ndocker compose --profile frontend up -d\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("Mermaid",{attrs:{id:"mermaid_64a5709c",graph:e.$dataBlock.mermaid_64a5709c}}),t("p",[e._v("The frontend and Backend are only started if docker compose is run with the profile full.\nIf you want to develop locally it is sugessted to start docker compose without this profile\nand start those parts via your IDE.\nThe "),t("code",[e._v(".env")]),e._v(" files for the frontend and backend are used when these services are deployed.\nIf you start them via your IDE they are not used.")]),e._v(" "),t("p",[t("strong",[e._v("⚠ Note")])]),e._v(" "),t("p",[e._v("The frontend will not start successfully at the first start.\nThis is because the keycloak is not yet fully set up when the frontend is started.\nThe setup of the keycloak is complete when the container "),t("code",[e._v("init-keycloak")]),e._v(" is stopped again.\nThe frontend can then be started afterward.")]),e._v(" "),t("p",[e._v("As soon as all services except "),t("code",[e._v("init-*")]),e._v(" have been started, the application can be accessed via http://localhost:8080.\nFor authentication, use the user "),t("code",[e._v("testleitung")]),e._v(" with the password "),t("code",[e._v("test")]),e._v(".")]),e._v(" "),t("p",[t("strong",[e._v("⚠ Proxy note")])]),e._v(" "),t("p",[e._v("If a proxy is set up in the browser, please make sure that it does not resolve "),t("code",[e._v("kubernetes.docker.internal")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"keycloak"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keycloak"}},[e._v("#")]),e._v(" Keycloak")]),e._v(" "),t("p",[e._v("An admin user and a test user are created by "),t("code",[e._v("init-keycloak")]),e._v(". You can change the configuration via the keycloak ui.")]),e._v(" "),t("h4",{attrs:{id:"configuration-migration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration-migration"}},[e._v("#")]),e._v(" configuration migration")]),e._v(" "),t("p",[e._v("Realm, client user and other configuration should be done by the migration client. Its config files are located in\n"),t("code",[e._v("keycloak\\migration")]),e._v(". The main file is "),t("code",[e._v("keycloak-changelog.yml")]),e._v(". It contains the list of migration files that\nshould be applied. For more information check "),t("a",{attrs:{href:"https://mayope.github.io/keycloakmigration/migrations/client/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"postgres"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#postgres"}},[e._v("#")]),e._v(" Postgres")]),e._v(" "),t("h4",{attrs:{id:"connection-to-postgresql-db-in-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#connection-to-postgresql-db-in-docker"}},[e._v("#")]),e._v(" Connection to Postgresql-DB in Docker")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_64a56faa",graph:e.$dataBlock.mermaid_64a56faa}}),t("p",[e._v("There is a database for the backend in the infrastructure provided.\nThe "),t("code",[e._v("db-postgres")]),e._v(" profile must be used to connect the backend to it during development.\nIt is configured so that a connection to the infrastructure is established by default.")]),e._v(" "),t("h2",{attrs:{id:"local-development-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#local-development-2"}},[e._v("#")]),e._v(" Local Development")]),e._v(" "),t("p",[e._v('For Local Development you have two options. You can either start all the services with or without security features.\nFor the Spring Applications (Backend & ApiGateway) this is realized via profiles.\nFor the Vue Application (frontend) this is realized via "modes".\nUsually the Frontend is packaged within the ApiGateway and the ApiGateway serves it to the user.\nThis process would be very time-consuming, so we implemented a way to test all the features with the vite dev server.\nIn the '),t("code",[e._v("package.json")]),e._v(" in the scripts section we defined "),t("code",[e._v("security")]),e._v(" and "),t("code",[e._v("serve")]),e._v(", where "),t("code",[e._v("security")]),e._v(" starts with the\n"),t("code",[e._v(".env.developmentSecurity")]),e._v(" file and "),t("code",[e._v("serve")]),e._v(" starts with the "),t("code",[e._v(".env.development")]),e._v(" file.")]),e._v(" "),t("p",[e._v("The table below shows the possible startup configurations for the different parts of the application.")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Service")]),e._v(" "),t("th",[e._v("Startup")]),e._v(" "),t("th",[e._v("Behavior")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("Backend")]),e._v(" "),t("td",[e._v("profiles=local,db-postgres,no-security")]),e._v(" "),t("td",[e._v("Starts the backend without security features and tries to connect to the postgres-DB provided by the local stack (Docker-Compose)")])]),e._v(" "),t("tr",[t("td",[e._v("Backend")]),e._v(" "),t("td",[e._v("profiles=local,db-postgres")]),e._v(" "),t("td",[e._v("Starts the backend with security features and tries to connect to the postgres-DB provided by the local stack (Docker-Compose). This needs an API-Gateway with active security to work.")])]),e._v(" "),t("tr",[t("td",[e._v("API-Gateway")]),e._v(" "),t("td",[e._v("profiles=local,no-security")]),e._v(" "),t("td",[e._v("Starts the API-Gateway without security features.")])]),e._v(" "),t("tr",[t("td",[e._v("API-Gateway")]),e._v(" "),t("td",[e._v("profiles=local")]),e._v(" "),t("td",[e._v("Starts the API-Gateway with security features. It tries to connect to the local keycloak provided by the local stack (Docker-Compose).")])]),e._v(" "),t("tr",[t("td",[e._v("Frontend")]),e._v(" "),t("td",[e._v("npm run serve")]),e._v(" "),t("td",[e._v("Starts the VUE frontend without security features active. Use this, if you want to develop new functionality fast and without need to login.")])]),e._v(" "),t("tr",[t("td",[e._v("Frontend")]),e._v(" "),t("td",[e._v("npm run security")]),e._v(" "),t("td",[e._v("Starts the VUE frontend with security features active. Use this, if you want to test new security restrictions or make sure a specific feature is only shown specific users. When using this you need an API-Gateway with active security.")])])])]),e._v(" "),t("p",[e._v("If you want to test the frontend with security locally you have to go to the IP of the API-Gateway first (usually "),t("code",[e._v("localhost:8082")]),e._v(").\nWhen heading to this url you should be redirected to the keycloak login where you can login and obtain your token.\nAfter logging in you should be able to go back to the frontend dev server (usually hosted on "),t("code",[e._v("localhost:8081")]),e._v(") and use\nthe app normally.")])],1)}),[],!1,null,null,null);"function"==typeof s&&s(n);t.default=n.exports}}]);