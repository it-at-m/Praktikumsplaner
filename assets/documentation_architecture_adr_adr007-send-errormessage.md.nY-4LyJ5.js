import{_ as r,D as s,c as o,I as n,l as e,a,a4 as d,o as c}from"./chunks/framework.Bena10jp.js";const P=JSON.parse('{"title":"ADR-007 send errormessage","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/architecture/adr/adr007-send-errormessage.md","filePath":"documentation/architecture/adr/adr007-send-errormessage.md","lastUpdated":1727015261000}'),i={name:"documentation/architecture/adr/adr007-send-errormessage.md"},h=e("h1",{id:"adr-007-send-errormessage",tabindex:"-1"},[a("ADR-007 send errormessage "),e("a",{class:"header-anchor",href:"#adr-007-send-errormessage","aria-label":'Permalink to "ADR-007 send errormessage"'},"​")],-1),u=e("h2",{id:"status",tabindex:"-1"},[a("Status "),e("a",{class:"header-anchor",href:"#status","aria-label":'Permalink to "Status"'},"​")],-1),l=d('<h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h2><p>What is the issue that we&#39;re seeing that is motivating this decision or change? Currently, when an error occurs in the backend, the frontend and the user don&#39;t get any information about the error. They just get notified that an error occurred.</p><h2 id="decision" tabindex="-1">Decision <a class="header-anchor" href="#decision" aria-label="Permalink to &quot;Decision&quot;">​</a></h2><p>Every time an error occurs in the backend, we send the error message as a string to the frontend with an appropriate HTTP status code.</p><h2 id="consequences" tabindex="-1">Consequences <a class="header-anchor" href="#consequences" aria-label="Permalink to &quot;Consequences&quot;">​</a></h2><p>We can provide more detailed information to the user, so the user can act accordingly to the error.</p>',6);function m(_,p,f,g,b,x){const t=s("adr-status");return c(),o("div",null,[h,u,n(t,{status:"accepted"}),l])}const T=r(i,[["render",m]]);export{P as __pageData,T as default};
