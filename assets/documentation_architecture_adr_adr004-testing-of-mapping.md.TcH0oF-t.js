import{_ as o,D as i,c as r,I as n,l as e,a as t,a4 as s,o as c}from"./chunks/framework.Bena10jp.js";const q=JSON.parse('{"title":"ADR-004 Reduce mapstructmapper tests to a minimum","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/architecture/adr/adr004-testing-of-mapping.md","filePath":"documentation/architecture/adr/adr004-testing-of-mapping.md","lastUpdated":1715623472000}'),d={name:"documentation/architecture/adr/adr004-testing-of-mapping.md"},p=e("h1",{id:"adr-004-reduce-mapstructmapper-tests-to-a-minimum",tabindex:"-1"},[t("ADR-004 Reduce mapstructmapper tests to a minimum "),e("a",{class:"header-anchor",href:"#adr-004-reduce-mapstructmapper-tests-to-a-minimum","aria-label":'Permalink to "ADR-004 Reduce mapstructmapper tests to a minimum"'},"​")],-1),l=e("h2",{id:"status",tabindex:"-1"},[t("Status "),e("a",{class:"header-anchor",href:"#status","aria-label":'Permalink to "Status"'},"​")],-1),u=s('<h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h2><p>Testing is all about showing the functionality of our application. We rely on the fact that the frameworks and libraries we use during development are sufficiently tested. Therefore, we can focus on testing our logic while writing tests, especially unit tests.</p><h2 id="decision" tabindex="-1">Decision <a class="header-anchor" href="#decision" aria-label="Permalink to &quot;Decision&quot;">​</a></h2><p>Mappers are only tested if we define explicit mapping logic. This explicit mapping logic is present, for example, when we define default implementations in interfaces or map fields with different names via the <code>@mapping</code> annotation or define an expression for the mapping.</p><p>Via the configuration of the mapstructprocessor for the <code>maven-compile-plugin</code>, it is defined that all fields in the target object are considered for mapping.</p><p>If a field is not part of the mapping declaration, an error should occur.</p><h3 id="todo" tabindex="-1">Todo <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;Todo&quot;">​</a></h3><ul><li>Add compiler argument at <code>maven-compile-plugin</code>: <code>-Amapstruct.unmappedTargetPolicy=ERROR</code></li><li>Ignore target properties when mapping if they are not fillable by the source object: <code>@Mapping(target=&quot;ignorableProp&quot;, ignore=true)</code></li></ul><h2 id="consequences" tabindex="-1">Consequences <a class="header-anchor" href="#consequences" aria-label="Permalink to &quot;Consequences&quot;">​</a></h2><p>There are fewer tests to write, but we rely more on Mapstruct to work correctly. More knowledge about Mapstruct is required, since assumptions are less checked.</p>',10);function m(h,f,g,_,b,x){const a=i("adr-status");return c(),r("div",null,[p,l,n(a,{status:"accepted"}),u])}const T=o(d,[["render",m]]);export{q as __pageData,T as default};
